name: Flask API Test Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    # Install Python dependencies
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Set up Node.js for Playwright
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: test/package-lock.json

    # Install Node dependencies
    - name: Install Node dependencies
      working-directory: test
      run: npm ci

    # Install Playwright browsers
    - name: Install Playwright browsers
      working-directory: test
      run: npx playwright install --with-deps chromium

    # Start Flask application in background
    - name: Start Flask application
      run: |
        python api.py &
        sleep 5  # Wait for Flask to start

    # Run Playwright tests
    - name: Run Playwright tests
      working-directory: test
      run: npx playwright test

    # If tests fail, upload test results as artifacts
    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-test-results
        path: test/test-results/
        retention-days: 7